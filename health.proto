syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "entrypoint.proto";

option go_package = "github.com/forhsd/mbpb/golang/v1;mbpb";
option java_multiple_files = false;
option java_package = "com.holder.grpc.proto";
option java_outer_classname = "MBEtlpbProto";

package mbpb;


service MBLink {
    // 健康检查
    rpc Health(stream HealthRequest) returns (stream HealthReply) {}
    // 运行情况
    rpc ReView(stream Overview) returns (stream Ack) {}
}

message HealthRequest {
    string ID = 1;
}

message HealthReply {
    bool Healthy = 1;
}

// 概览
message Overview {
    string key = 1; // 
    string owner = 2; // 节点
    string enterpriseID = 3; // 企业ID
    int64 cardId = 4; // CardId
    string sequenceID = 5; // 序列ID
    optional int64 queryUPtime = 7; // 查询耗时(毫秒)
    optional int64 writeUPtime = 8; // 写入耗时(毫秒)
    optional int64 takeUpTime = 9; // 运行耗时(毫秒)
    mbpb.RunStatus runStatus = 10; // 运行状态
    int32 progress = 11; // 当前进度
    int64 startTime = 12; // 开始运行时间 精确到纳秒
    int64 endTime = 13; // 结束运行时间 精确到纳秒
    optional int64 nextRunTime = 14; // 下次运行时间 精确到纳秒
    Detail detail = 15; // 详情
    mbpb.RunType runType = 16; // 运行类型
}

// 详情
message Detail {
    optional int64 rowsCount = 1; // 行数
    repeated mbpb.Column columns = 2; // 字段类
    optional mbpb.Table outTable = 3; // 实体表
    optional mbpb.Error error = 4; // 错误明细
}

message Ack {
    string Key = 1;
    string SequenceID = 2;
    optional mbpb.Error Error = 3;
    optional google.protobuf.Timestamp Now = 4;
}

// [deprecated = true]